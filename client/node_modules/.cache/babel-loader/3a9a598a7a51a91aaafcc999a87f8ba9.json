{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nexports.__esModule = true;\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar omit = require(\"lodash.omit\");\n\nvar react_cookie_1 = require(\"react-cookie\");\n\nvar BannerContent_1 = require(\"./BannerContent\");\n/**\n * React Cookie banner dismissable with just a scroll!\n */\n\n\nvar CookieBanner =\n/** @class */\nfunction (_super) {\n  __extends(CookieBanner, _super);\n\n  function CookieBanner() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      listeningScroll: false\n    };\n\n    _this.addOnScrollListener = function (props) {\n      var _props = props || _this.props;\n\n      if (!_this.state.listeningScroll && !_this.hasAcceptedCookies() && _props.dismissOnScroll) {\n        if (window.attachEvent) {\n          // Internet Explorer\n          window.attachEvent('onscroll', _this.onScroll);\n        } else if (window.addEventListener) {\n          window.addEventListener('scroll', _this.onScroll, false);\n        }\n\n        _this.setState({\n          listeningScroll: true\n        });\n      }\n    };\n\n    _this.removeOnScrollListener = function () {\n      if (_this.state.listeningScroll) {\n        if (window.detachEvent) {\n          // Internet Explorer\n          window.detachEvent('onscroll', _this.onScroll);\n        } else if (window.removeEventListener) {\n          window.removeEventListener('scroll', _this.onScroll, false);\n        }\n\n        _this.setState({\n          listeningScroll: false\n        });\n      }\n    };\n\n    _this.onScroll = function () {\n      // tacit agreement buahaha! (evil laugh)\n      var dismissOnScrollThreshold = _this.props.dismissOnScrollThreshold;\n\n      if (window.pageYOffset > dismissOnScrollThreshold) {\n        _this.onAccept();\n      }\n    };\n\n    _this.getSecondsSinceExpiration = function (cookieExpiration) {\n      if (typeof cookieExpiration === 'number') {\n        return cookieExpiration;\n      }\n\n      var SECONDS_IN_YEAR = 31536000;\n      var SECONDS_IN_DAY = 86400;\n      var SECONDS_IN_HOUR = 3600;\n\n      var _cookieExpiration = __assign({\n        years: 0,\n        days: 0,\n        hours: 0\n      }, cookieExpiration);\n\n      var years = _cookieExpiration.years,\n          days = _cookieExpiration.days,\n          hours = _cookieExpiration.hours;\n      return years * SECONDS_IN_YEAR + days * SECONDS_IN_DAY + hours * SECONDS_IN_HOUR;\n    };\n\n    _this.onAccept = function () {\n      var _a = _this.props,\n          cookies = _a.cookies,\n          cookie = _a.cookie,\n          cookieExpiration = _a.cookieExpiration,\n          path = _a.cookiePath,\n          onAccept = _a.onAccept;\n      cookies.set(cookie, true, {\n        path: path,\n        expires: new Date(Date.now() + _this.getSecondsSinceExpiration(cookieExpiration) * 1000)\n      });\n      onAccept({\n        cookie: cookie\n      });\n\n      if (_this.state.listeningScroll) {\n        _this.removeOnScrollListener();\n      } else {\n        _this.forceUpdate();\n      }\n    };\n\n    return _this;\n  }\n\n  CookieBanner.prototype.componentDidMount = function () {\n    this.addOnScrollListener();\n  };\n\n  CookieBanner.prototype.hasAcceptedCookies = function () {\n    var _a = this.props,\n        cookies = _a.cookies,\n        cookie = _a.cookie;\n    return cookies.get(cookie);\n  };\n\n  CookieBanner.prototype.templateChildren = function (children, onAccept) {\n    if (typeof children === 'function') {\n      return children(onAccept);\n    }\n\n    return children;\n  };\n\n  CookieBanner.prototype.render = function () {\n    var _a = this,\n        onAccept = _a.onAccept,\n        _b = _a.props,\n        message = _b.message,\n        link = _b.link,\n        buttonMessage = _b.buttonMessage,\n        closeIcon = _b.closeIcon,\n        disableStyle = _b.disableStyle,\n        styles = _b.styles,\n        className = _b.className,\n        children = _b.children,\n        dismissOnClick = _b.dismissOnClick,\n        props = __rest(_b, [\"message\", \"link\", \"buttonMessage\", \"closeIcon\", \"disableStyle\", \"styles\", \"className\", \"children\", \"dismissOnClick\"]);\n\n    var hasAcceptedCookies = this.hasAcceptedCookies();\n\n    var bannerContentProps = __assign({}, omit(props, Object.keys(CookieBanner.propTypes)), {\n      message: message,\n      onAccept: onAccept,\n      link: link,\n      buttonMessage: buttonMessage,\n      closeIcon: closeIcon,\n      disableStyle: disableStyle,\n      styles: styles,\n      className: className,\n      dismissOnClick: dismissOnClick\n    });\n\n    if (hasAcceptedCookies) {\n      return null;\n    }\n\n    return children ? this.templateChildren(children, onAccept) : React.createElement(BannerContent_1[\"default\"], __assign({}, bannerContentProps));\n  };\n\n  CookieBanner.prototype.componentDidUpdate = function () {\n    var props = this.props;\n\n    if (props.dismissOnScroll) {\n      this.addOnScrollListener(props);\n    } else {\n      this.removeOnScrollListener();\n    }\n  };\n\n  CookieBanner.prototype.componentWillUnmount = function () {\n    this.removeOnScrollListener();\n  };\n\n  CookieBanner.propTypes = __assign({}, BannerContent_1.propTypes, {\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n    onAccept: PropTypes.func,\n    cookies: PropTypes.instanceOf(react_cookie_1.Cookies),\n    cookie: PropTypes.string,\n    cookieExpiration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n      years: PropTypes.number,\n      days: PropTypes.number,\n      hours: PropTypes.number\n    })]),\n    cookiePath: PropTypes.string,\n    dismissOnScroll: PropTypes.bool,\n    dismissOnScrollThreshold: PropTypes.number\n  });\n  CookieBanner.defaultProps = {\n    onAccept: function onAccept() {},\n    dismissOnScroll: true,\n    cookies: new react_cookie_1.Cookies(),\n    cookie: 'accepts-cookies',\n    cookieExpiration: {\n      years: 1\n    },\n    buttonMessage: 'Got it',\n    dismissOnScrollThreshold: 0,\n    styles: {}\n  };\n  return CookieBanner;\n}(React.Component);\n\nexports[\"default\"] = CookieBanner;","map":null,"metadata":{},"sourceType":"script"}