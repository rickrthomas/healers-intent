{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n\n    for (var p in s) {\n      if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n  }\n\n  return t;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nexports.__esModule = true;\n\nvar React = require(\"react\");\n\nvar PropTypes = require(\"prop-types\");\n\nvar omit = require(\"lodash.omit\");\n\nvar cx = require(\"classnames\");\n\nvar styleUtils = require(\"./styleUtils\");\n\nexports.propTypes = {\n  message: PropTypes.string,\n  onAccept: PropTypes.func.isRequired,\n  link: PropTypes.element,\n  buttonMessage: PropTypes.string,\n  closeIcon: PropTypes.string,\n  disableStyle: PropTypes.bool,\n  styles: PropTypes.object,\n  className: PropTypes.string,\n  dismissOnClick: PropTypes.bool\n};\n/**\n * React Cookie banner template\n */\n\nvar BannerContent =\n/** @class */\nfunction (_super) {\n  __extends(BannerContent, _super);\n\n  function BannerContent() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.getStyle = function (style) {\n      var _a = _this.props,\n          disableStyle = _a.disableStyle,\n          _b = _a.styles,\n          styles = _b === void 0 ? {} : _b;\n\n      if (!disableStyle) {\n        // apply custom styles if available\n        return __assign({}, styleUtils.getStyle(style), styles[style]);\n      }\n    };\n\n    _this.templateCloseIcon = function (className, onClick, style) {\n      return React.createElement(\"button\", __assign({}, {\n        onClick: onClick,\n        style: style\n      }), React.createElement(\"i\", __assign({}, {\n        className: className\n      })));\n    };\n\n    _this.templateCloseButton = function (buttonMessage, onClick, style) {\n      return React.createElement(\"button\", __assign({\n        className: 'button-close'\n      }, {\n        onClick: onClick,\n        style: style\n      }), buttonMessage);\n    };\n\n    _this.templateLink = function (link, style) {\n      return React.cloneElement(link, link.props.style ? undefined : {\n        style: style\n      });\n    };\n\n    _this.bannerClicked = function () {\n      if (_this.props.dismissOnClick) {\n        _this.props.onAccept();\n      }\n    };\n\n    return _this;\n  }\n\n  BannerContent.prototype.render = function () {\n    var _a = this,\n        getStyle = _a.getStyle,\n        _b = _a.props,\n        onAccept = _b.onAccept,\n        className = _b.className,\n        message = _b.message,\n        closeIcon = _b.closeIcon,\n        link = _b.link,\n        _c = _b.buttonMessage,\n        buttonMessage = _c === void 0 ? 'Got it' : _c,\n        _wrapperProps = __rest(_b, [\"onAccept\", \"className\", \"message\", \"closeIcon\", \"link\", \"buttonMessage\"]);\n\n    var cookieMessageStyle = getStyle('message');\n\n    var wrapperProps = __assign({}, omit(_wrapperProps, Object.keys(exports.propTypes)), {\n      className: cx('react-cookie-banner', className),\n      style: getStyle('banner')\n    });\n\n    return React.createElement(\"div\", __assign({}, wrapperProps, {\n      onClick: this.bannerClicked\n    }), React.createElement(\"span\", {\n      className: 'cookie-message',\n      style: cookieMessageStyle\n    }, message, link && this.templateLink(link, getStyle('link'))), !closeIcon && this.templateCloseButton(buttonMessage, onAccept, getStyle('button')), !!closeIcon && this.templateCloseIcon(closeIcon, onAccept, getStyle('icon')));\n  };\n\n  BannerContent.propTypes = exports.propTypes;\n  return BannerContent;\n}(React.Component);\n\nexports[\"default\"] = BannerContent;","map":null,"metadata":{},"sourceType":"script"}